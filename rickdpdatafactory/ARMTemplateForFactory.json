{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rickdpdatafactory"
		},
		"HTTP_AWGitHub_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/microsoft/sql-server-samples/master/samples/databases/adventure-works/oltp-install-script/"
		},
		"adventureWorksProduct_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/microsoft/sql-server-samples/master/samples/databases/adventure-works/oltp-install-script/Product.csv"
		},
		"rickdatalakev2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rickdpstorageacc01.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyAWEntities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies a list of entities from ",
				"activities": [
					{
						"name": "ForEach Entity",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Entities')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyAWEntities",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyAWEntity",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Entity": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Entities": {
						"type": "Array",
						"defaultValue": [
							"Product",
							"ProductSubcategory",
							"ProductCategory"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyAWEntity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyAWEntity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy AW Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HTTP_BIN_AdventureWorks",
								"type": "DatasetReference",
								"parameters": {
									"Entity": "@pipeline().parameters.Entity"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_BIN_AdeventureWorks",
								"type": "DatasetReference",
								"parameters": {
									"Entity": "@pipeline().parameters.Entity"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Entity": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HTTP_BIN_AdventureWorks')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_BIN_AdeventureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyAWProduct')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HTTP_BIN_AWProduct",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_BIN_AWProduct",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HTTP_BIN_AWProduct')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_BIN_AWProduct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateProductDimension",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateProductDimension",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Product": {
										"FileName": "Product.tsv"
									},
									"ProductSubcategory": {
										"FileName": "ProductSubcategory.tsv"
									},
									"ProductCategory": {
										"FileName": "ProductCategory.tsv"
									},
									"WriteToDataLake": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateProductDimension')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_BIN_AWProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rickdatalakev2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Product.csv",
						"folderPath": "Raw",
						"fileSystem": "lakeroot"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rickdatalakev2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_BIN_AdeventureWorks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rickdatalakev2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Entity": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{dataset().Entity}.tsv",
							"type": "Expression"
						},
						"folderPath": "Raw",
						"fileSystem": "lakeroot"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rickdatalakev2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_TSV_AdventureWorks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rickdatalakev2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "Raw",
						"fileSystem": "lakeroot"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rickdatalakev2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_BIN_AWProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adventureWorksProduct",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adventureWorksProduct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_BIN_AdventureWorks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_AWGitHub",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Entity": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@{dataset().Entity}.csv",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HTTP_AWGitHub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rickdatalakev2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Conformed/DimProduct",
						"fileSystem": "lakeroot"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ProductId",
						"type": "INT32"
					},
					{
						"name": "Product",
						"type": "UTF8"
					},
					{
						"name": "SubcategoryId",
						"type": "INT32"
					},
					{
						"name": "CategoryId",
						"type": "INT32"
					},
					{
						"name": "Subcategory",
						"type": "UTF8"
					},
					{
						"name": "Category",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rickdatalakev2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_AWGitHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP_AWGitHub_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adventureWorksProduct')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('adventureWorksProduct_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rickdatalakev2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('rickdatalakev2_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateProductDimension')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_TSV_AdventureWorks",
								"type": "DatasetReference"
							},
							"name": "Product"
						},
						{
							"dataset": {
								"referenceName": "ADLS_TSV_AdventureWorks",
								"type": "DatasetReference"
							},
							"name": "ProductSubcategory"
						},
						{
							"dataset": {
								"referenceName": "ADLS_TSV_AdventureWorks",
								"type": "DatasetReference"
							},
							"name": "ProductCategory"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "rickdatalakev2",
								"type": "LinkedServiceReference"
							},
							"name": "WriteToDataLake"
						},
						{
							"linkedService": {
								"referenceName": "rickdatalakev2",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "SelectProductColumns",
							"description": "Renaming Product to select1 with columns 'ProductId, Product, SubcategoryId'"
						},
						{
							"name": "SelectProductSubCategoryColumns",
							"description": "Renaming ProductSubcategory to select2 with columns 'SubcategoryId, CategoryId, Subcategory'"
						},
						{
							"name": "SelectProductCategoryColumns",
							"description": "Renaming ProductCategory to select3 with columns 'CategoryId, Category'"
						},
						{
							"name": "Lookupstream"
						},
						{
							"name": "LookupProductCategory"
						},
						{
							"name": "RemoveDuplicateColumns"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductId as integer,",
						"          Product as string,",
						"          {_col2_} as string,",
						"          {_col3_} as boolean,",
						"          {_col4_} as boolean,",
						"          {_col5_} as string,",
						"          {_col6_} as short,",
						"          {_col7_} as short,",
						"          {_col8_} as double,",
						"          {_col9_} as double,",
						"          {_col10_} as string,",
						"          {_col11_} as string,",
						"          {_col12_} as string,",
						"          {_col13_} as double,",
						"          {_col14_} as short,",
						"          {_col15_} as string,",
						"          {_col16_} as string,",
						"          {_col17_} as string,",
						"          SubcategoryId as integer,",
						"          {_col19_} as short,",
						"          {_col20_} as timestamp,",
						"          {_col21_} as timestamp,",
						"          {_col22_} as string,",
						"          {_col23_} as string,",
						"          {_col24_} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Product",
						"source(output(",
						"          SubcategoryId as integer,",
						"          CategoryId as integer,",
						"          Subcategory as string,",
						"          {_col3_} as string,",
						"          {_col4_} as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProductSubcategory",
						"source(output(",
						"          CategoryId as integer,",
						"          Category as string,",
						"          {_col2_} as string,",
						"          {_col3_} as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProductCategory",
						"Product select(mapColumn(",
						"          ProductId,",
						"          Product,",
						"          SubcategoryId",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectProductColumns",
						"ProductSubcategory select(mapColumn(",
						"          SubcategoryId,",
						"          CategoryId,",
						"          Subcategory",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectProductSubCategoryColumns",
						"ProductCategory select(mapColumn(",
						"          CategoryId,",
						"          Category",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectProductCategoryColumns",
						"SelectProductColumns, LookupProductCategory lookup(SelectProductColumns@SubcategoryId == SelectProductSubCategoryColumns@SubcategoryId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> Lookupstream",
						"SelectProductSubCategoryColumns, SelectProductCategoryColumns lookup(SelectProductSubCategoryColumns@CategoryId == SelectProductCategoryColumns@CategoryId,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupProductCategory",
						"Lookupstream select(mapColumn(",
						"          ProductId,",
						"          Product,",
						"          SubcategoryId = SelectProductColumns@SubcategoryId,",
						"          CategoryId = SelectProductSubCategoryColumns@CategoryId,",
						"          Subcategory,",
						"          Category",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveDuplicateColumns",
						"RemoveDuplicateColumns sort(desc(Subcategory, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'lakeroot',",
						"     folderPath: 'Conformed/DimProduct',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> WriteToDataLake",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'lakeroot',",
						"     folderPath: 'Conformed/ProdFile',",
						"     truncate: true,",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_TSV_AdventureWorks')]",
				"[concat(variables('factoryId'), '/linkedServices/rickdatalakev2')]"
			]
		}
	]
}